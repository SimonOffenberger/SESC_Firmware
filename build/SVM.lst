ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"SVM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.initSVM,"ax",%progbits
  20              		.align	1
  21              		.global	initSVM
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	initSVM:
  27              	.LVL0:
  28              	.LFB126:
  29              		.file 1 "Core/Src/SVM.c"
   1:Core/Src/SVM.c **** /**
   2:Core/Src/SVM.c ****   ******************************************************************************
   3:Core/Src/SVM.c ****   * @file    adc.c
   4:Core/Src/SVM.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/SVM.c ****   *          of the ADC instances.
   6:Core/Src/SVM.c ****   ******************************************************************************
   7:Core/Src/SVM.c ****   * @attention
   8:Core/Src/SVM.c ****   *
   9:Core/Src/SVM.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/SVM.c ****   * All rights reserved.</center></h2>
  11:Core/Src/SVM.c ****   *
  12:Core/Src/SVM.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/SVM.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/SVM.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/SVM.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/SVM.c ****   *
  17:Core/Src/SVM.c ****   ******************************************************************************
  18:Core/Src/SVM.c ****   */
  19:Core/Src/SVM.c **** 
  20:Core/Src/SVM.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/SVM.c **** #include "SVM.h"
  22:Core/Src/SVM.c **** #include "tim.h"
  23:Core/Src/SVM.c **** #include "adc.h"
  24:Core/Src/SVM.c **** #include "global_var.h"
  25:Core/Src/SVM.c **** #include <string.h>
  26:Core/Src/SVM.c **** #include <stdio.h>
  27:Core/Src/SVM.c **** #include <stdlib.h>
  28:Core/Src/SVM.c **** 
  29:Core/Src/SVM.c **** 
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 2


  30:Core/Src/SVM.c **** 
  31:Core/Src/SVM.c **** 
  32:Core/Src/SVM.c **** static uint16_t CCR_U=0;
  33:Core/Src/SVM.c **** static uint16_t CCR_V=0;
  34:Core/Src/SVM.c **** static uint16_t CCR_W=0;
  35:Core/Src/SVM.c **** static uint16_t CCR_CURR_AV1=0;
  36:Core/Src/SVM.c **** static uint16_t CCR_CURR_AV2=0;
  37:Core/Src/SVM.c **** static uint16_t current_sector=0;
  38:Core/Src/SVM.c **** 
  39:Core/Src/SVM.c **** 
  40:Core/Src/SVM.c **** 
  41:Core/Src/SVM.c **** const uint16_t SPWM[180] = {
  42:Core/Src/SVM.c **** 	
  43:Core/Src/SVM.c **** 0		,
  44:Core/Src/SVM.c **** 30      ,
  45:Core/Src/SVM.c **** 61      ,
  46:Core/Src/SVM.c **** 91      ,
  47:Core/Src/SVM.c **** 122     ,
  48:Core/Src/SVM.c **** 152     ,
  49:Core/Src/SVM.c **** 183     ,
  50:Core/Src/SVM.c **** 213     ,
  51:Core/Src/SVM.c **** 243     ,
  52:Core/Src/SVM.c **** 273     ,
  53:Core/Src/SVM.c **** 304     ,
  54:Core/Src/SVM.c **** 334     ,
  55:Core/Src/SVM.c **** 364     ,
  56:Core/Src/SVM.c **** 394     ,
  57:Core/Src/SVM.c **** 424     ,
  58:Core/Src/SVM.c **** 454     ,
  59:Core/Src/SVM.c **** 483     ,
  60:Core/Src/SVM.c **** 513     ,
  61:Core/Src/SVM.c **** 542     ,
  62:Core/Src/SVM.c **** 572     ,
  63:Core/Src/SVM.c **** 601     ,
  64:Core/Src/SVM.c **** 630     ,
  65:Core/Src/SVM.c **** 659     ,
  66:Core/Src/SVM.c **** 688     ,
  67:Core/Src/SVM.c **** 717     ,
  68:Core/Src/SVM.c **** 745     ,
  69:Core/Src/SVM.c **** 774     ,
  70:Core/Src/SVM.c **** 802     ,
  71:Core/Src/SVM.c **** 830     ,
  72:Core/Src/SVM.c **** 858     ,
  73:Core/Src/SVM.c **** 886     ,
  74:Core/Src/SVM.c **** 894     ,
  75:Core/Src/SVM.c **** 902     ,
  76:Core/Src/SVM.c **** 909     ,
  77:Core/Src/SVM.c **** 917     ,
  78:Core/Src/SVM.c **** 924     ,
  79:Core/Src/SVM.c **** 931     ,
  80:Core/Src/SVM.c **** 938     ,
  81:Core/Src/SVM.c **** 944     ,
  82:Core/Src/SVM.c **** 951     ,
  83:Core/Src/SVM.c **** 957     ,
  84:Core/Src/SVM.c **** 963     ,
  85:Core/Src/SVM.c **** 968     ,
  86:Core/Src/SVM.c **** 974     ,
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 3


  87:Core/Src/SVM.c **** 979     ,
  88:Core/Src/SVM.c **** 983     ,
  89:Core/Src/SVM.c **** 988     ,
  90:Core/Src/SVM.c **** 992     ,
  91:Core/Src/SVM.c **** 997     ,
  92:Core/Src/SVM.c **** 1001    ,
  93:Core/Src/SVM.c **** 1004    ,
  94:Core/Src/SVM.c **** 1007    ,
  95:Core/Src/SVM.c **** 1010    ,
  96:Core/Src/SVM.c **** 1013    ,
  97:Core/Src/SVM.c **** 1015    ,
  98:Core/Src/SVM.c **** 1018    ,
  99:Core/Src/SVM.c **** 1020    ,
 100:Core/Src/SVM.c **** 1021    ,
 101:Core/Src/SVM.c **** 1022    ,
 102:Core/Src/SVM.c **** 1023    ,
 103:Core/Src/SVM.c **** 1024    ,
 104:Core/Src/SVM.c **** 1024    ,
 105:Core/Src/SVM.c **** 1024    ,
 106:Core/Src/SVM.c **** 1024    ,
 107:Core/Src/SVM.c **** 1024    ,
 108:Core/Src/SVM.c **** 1022    ,
 109:Core/Src/SVM.c **** 1021    ,
 110:Core/Src/SVM.c **** 1020    ,
 111:Core/Src/SVM.c **** 1018    ,
 112:Core/Src/SVM.c **** 1015    ,
 113:Core/Src/SVM.c **** 1013    ,
 114:Core/Src/SVM.c **** 1010    ,
 115:Core/Src/SVM.c **** 1007    ,
 116:Core/Src/SVM.c **** 1003    ,
 117:Core/Src/SVM.c **** 999     ,
 118:Core/Src/SVM.c **** 995     ,
 119:Core/Src/SVM.c **** 990     ,
 120:Core/Src/SVM.c **** 985     ,
 121:Core/Src/SVM.c **** 980     ,
 122:Core/Src/SVM.c **** 974     ,
 123:Core/Src/SVM.c **** 968     ,
 124:Core/Src/SVM.c **** 961     ,
 125:Core/Src/SVM.c **** 954     ,
 126:Core/Src/SVM.c **** 948     ,
 127:Core/Src/SVM.c **** 940     ,
 128:Core/Src/SVM.c **** 932     ,
 129:Core/Src/SVM.c **** 924     ,
 130:Core/Src/SVM.c **** 915     ,
 131:Core/Src/SVM.c **** 906     ,
 132:Core/Src/SVM.c **** 897     ,
 133:Core/Src/SVM.c **** 887     ,
 134:Core/Src/SVM.c **** 897     ,
 135:Core/Src/SVM.c **** 906     ,
 136:Core/Src/SVM.c **** 915     ,
 137:Core/Src/SVM.c **** 924     ,
 138:Core/Src/SVM.c **** 932     ,
 139:Core/Src/SVM.c **** 940     ,
 140:Core/Src/SVM.c **** 948     ,
 141:Core/Src/SVM.c **** 954     ,
 142:Core/Src/SVM.c **** 961     ,
 143:Core/Src/SVM.c **** 968     ,
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 4


 144:Core/Src/SVM.c **** 974     ,
 145:Core/Src/SVM.c **** 980     ,
 146:Core/Src/SVM.c **** 985     ,
 147:Core/Src/SVM.c **** 990     ,
 148:Core/Src/SVM.c **** 995     ,
 149:Core/Src/SVM.c **** 999     ,
 150:Core/Src/SVM.c **** 1003    ,
 151:Core/Src/SVM.c **** 1007    ,
 152:Core/Src/SVM.c **** 1010    ,
 153:Core/Src/SVM.c **** 1013    ,
 154:Core/Src/SVM.c **** 1015    ,
 155:Core/Src/SVM.c **** 1018    ,
 156:Core/Src/SVM.c **** 1020    ,
 157:Core/Src/SVM.c **** 1021    ,
 158:Core/Src/SVM.c **** 1022    ,
 159:Core/Src/SVM.c **** 1024    ,
 160:Core/Src/SVM.c **** 1024    ,
 161:Core/Src/SVM.c **** 1024    ,
 162:Core/Src/SVM.c **** 1024    ,
 163:Core/Src/SVM.c **** 1024    ,
 164:Core/Src/SVM.c **** 1023    ,
 165:Core/Src/SVM.c **** 1022    ,
 166:Core/Src/SVM.c **** 1021    ,
 167:Core/Src/SVM.c **** 1020    ,
 168:Core/Src/SVM.c **** 1018    ,
 169:Core/Src/SVM.c **** 1015    ,
 170:Core/Src/SVM.c **** 1013    ,
 171:Core/Src/SVM.c **** 1010    ,
 172:Core/Src/SVM.c **** 1007    ,
 173:Core/Src/SVM.c **** 1004    ,
 174:Core/Src/SVM.c **** 1001    ,
 175:Core/Src/SVM.c **** 997     ,
 176:Core/Src/SVM.c **** 992     ,
 177:Core/Src/SVM.c **** 988     ,
 178:Core/Src/SVM.c **** 983     ,
 179:Core/Src/SVM.c **** 979     ,
 180:Core/Src/SVM.c **** 974     ,
 181:Core/Src/SVM.c **** 968     ,
 182:Core/Src/SVM.c **** 963     ,
 183:Core/Src/SVM.c **** 957     ,
 184:Core/Src/SVM.c **** 951     ,
 185:Core/Src/SVM.c **** 944     ,
 186:Core/Src/SVM.c **** 938     ,
 187:Core/Src/SVM.c **** 931     ,
 188:Core/Src/SVM.c **** 924     ,
 189:Core/Src/SVM.c **** 917     ,
 190:Core/Src/SVM.c **** 909     ,
 191:Core/Src/SVM.c **** 902     ,
 192:Core/Src/SVM.c **** 894     ,
 193:Core/Src/SVM.c **** 886     ,
 194:Core/Src/SVM.c **** 858     ,
 195:Core/Src/SVM.c **** 830     ,
 196:Core/Src/SVM.c **** 802     ,
 197:Core/Src/SVM.c **** 774     ,
 198:Core/Src/SVM.c **** 745     ,
 199:Core/Src/SVM.c **** 717     ,
 200:Core/Src/SVM.c **** 688     ,
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 5


 201:Core/Src/SVM.c **** 659     ,
 202:Core/Src/SVM.c **** 630     ,
 203:Core/Src/SVM.c **** 601     ,
 204:Core/Src/SVM.c **** 572     ,
 205:Core/Src/SVM.c **** 542     ,
 206:Core/Src/SVM.c **** 513     ,
 207:Core/Src/SVM.c **** 483     ,
 208:Core/Src/SVM.c **** 454     ,
 209:Core/Src/SVM.c **** 424     ,
 210:Core/Src/SVM.c **** 394     ,
 211:Core/Src/SVM.c **** 364     ,
 212:Core/Src/SVM.c **** 334     ,
 213:Core/Src/SVM.c **** 304     ,
 214:Core/Src/SVM.c **** 273     ,
 215:Core/Src/SVM.c **** 243     ,
 216:Core/Src/SVM.c **** 213     ,
 217:Core/Src/SVM.c **** 183     ,
 218:Core/Src/SVM.c **** 152     ,
 219:Core/Src/SVM.c **** 122     ,
 220:Core/Src/SVM.c **** 91      ,
 221:Core/Src/SVM.c **** 61      ,
 222:Core/Src/SVM.c **** 30
 223:Core/Src/SVM.c **** 
 224:Core/Src/SVM.c **** };
 225:Core/Src/SVM.c **** 
 226:Core/Src/SVM.c **** 
 227:Core/Src/SVM.c **** void initSVM(uint16_t switching_frequency){
  30              		.loc 1 227 43 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 227 43 is_stmt 0 view .LVU1
  35 0000 10B5     		push	{r4, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
 228:Core/Src/SVM.c **** 	
 229:Core/Src/SVM.c **** 	HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
  40              		.loc 1 229 2 is_stmt 1 view .LVU2
  41 0002 1920     		movs	r0, #25
  42              	.LVL1:
  43              		.loc 1 229 2 is_stmt 0 view .LVU3
  44 0004 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  45              	.LVL2:
 230:Core/Src/SVM.c **** 	HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn,0,0);
  46              		.loc 1 230 2 is_stmt 1 view .LVU4
  47 0008 0022     		movs	r2, #0
  48 000a 1146     		mov	r1, r2
  49 000c 1920     		movs	r0, #25
  50 000e FFF7FEFF 		bl	HAL_NVIC_SetPriority
  51              	.LVL3:
 231:Core/Src/SVM.c **** 	__HAL_TIM_ENABLE_IT(&htim1,TIM_IT_UPDATE);
  52              		.loc 1 231 2 view .LVU5
  53 0012 1A4C     		ldr	r4, .L3
  54 0014 2268     		ldr	r2, [r4]
  55 0016 D368     		ldr	r3, [r2, #12]
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 6


  56 0018 43F00103 		orr	r3, r3, #1
  57 001c D360     		str	r3, [r2, #12]
 232:Core/Src/SVM.c **** 
 233:Core/Src/SVM.c **** 	HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_1); // W
  58              		.loc 1 233 2 view .LVU6
  59 001e 0021     		movs	r1, #0
  60 0020 2046     		mov	r0, r4
  61 0022 FFF7FEFF 		bl	HAL_TIM_PWM_Start
  62              	.LVL4:
 234:Core/Src/SVM.c **** 	HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_2); // V
  63              		.loc 1 234 2 view .LVU7
  64 0026 0421     		movs	r1, #4
  65 0028 2046     		mov	r0, r4
  66 002a FFF7FEFF 		bl	HAL_TIM_PWM_Start
  67              	.LVL5:
 235:Core/Src/SVM.c **** 	HAL_TIM_PWM_Start_IT(&htim1,TIM_CHANNEL_3); // U
  68              		.loc 1 235 2 view .LVU8
  69 002e 0821     		movs	r1, #8
  70 0030 2046     		mov	r0, r4
  71 0032 FFF7FEFF 		bl	HAL_TIM_PWM_Start_IT
  72              	.LVL6:
 236:Core/Src/SVM.c **** 	HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_5);
  73              		.loc 1 236 2 view .LVU9
  74 0036 1021     		movs	r1, #16
  75 0038 2046     		mov	r0, r4
  76 003a FFF7FEFF 		bl	HAL_TIM_PWM_Start
  77              	.LVL7:
 237:Core/Src/SVM.c **** 	HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_6);
  78              		.loc 1 237 2 view .LVU10
  79 003e 1421     		movs	r1, #20
  80 0040 2046     		mov	r0, r4
  81 0042 FFF7FEFF 		bl	HAL_TIM_PWM_Start
  82              	.LVL8:
 238:Core/Src/SVM.c **** 	HAL_TIMEx_PWMN_Start(&htim1,TIM_CHANNEL_1);
  83              		.loc 1 238 2 view .LVU11
  84 0046 0021     		movs	r1, #0
  85 0048 2046     		mov	r0, r4
  86 004a FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
  87              	.LVL9:
 239:Core/Src/SVM.c **** 	HAL_TIMEx_PWMN_Start(&htim1,TIM_CHANNEL_2);
  88              		.loc 1 239 2 view .LVU12
  89 004e 0421     		movs	r1, #4
  90 0050 2046     		mov	r0, r4
  91 0052 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
  92              	.LVL10:
 240:Core/Src/SVM.c **** 	HAL_TIMEx_PWMN_Start(&htim1,TIM_CHANNEL_3);
  93              		.loc 1 240 2 view .LVU13
  94 0056 0821     		movs	r1, #8
  95 0058 2046     		mov	r0, r4
  96 005a FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
  97              	.LVL11:
 241:Core/Src/SVM.c **** 
 242:Core/Src/SVM.c **** 
 243:Core/Src/SVM.c **** 	PWM_TIM->BDTR&= ~(255);
  98              		.loc 1 243 2 view .LVU14
  99              		.loc 1 243 15 is_stmt 0 view .LVU15
 100 005e 084B     		ldr	r3, .L3+4
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 7


 101 0060 5A6C     		ldr	r2, [r3, #68]
 102 0062 22F0FF02 		bic	r2, r2, #255
 103 0066 5A64     		str	r2, [r3, #68]
 244:Core/Src/SVM.c **** 	PWM_TIM->BDTR|= 128;
 104              		.loc 1 244 2 is_stmt 1 view .LVU16
 105              		.loc 1 244 15 is_stmt 0 view .LVU17
 106 0068 5A6C     		ldr	r2, [r3, #68]
 107 006a 42F08002 		orr	r2, r2, #128
 108 006e 5A64     		str	r2, [r3, #68]
 245:Core/Src/SVM.c **** 	PWM_TIM->ARR=PWM_TIM_ARR;
 109              		.loc 1 245 2 is_stmt 1 view .LVU18
 110              		.loc 1 245 14 is_stmt 0 view .LVU19
 111 0070 4FF49662 		mov	r2, #1200
 112 0074 DA62     		str	r2, [r3, #44]
 246:Core/Src/SVM.c **** 
 247:Core/Src/SVM.c **** 	__enable_irq();
 113              		.loc 1 247 2 is_stmt 1 view .LVU20
 114              	.LBB4:
 115              	.LBI4:
 116              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 8


  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 9


  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 117              		.loc 2 129 27 view .LVU21
 118              	.LBB5:
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 119              		.loc 2 131 3 view .LVU22
 120              		.syntax unified
 121              	@ 131 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 122 0076 62B6     		cpsie i
 123              	@ 0 "" 2
 124              		.thumb
 125              		.syntax unified
 126              	.LBE5:
 127              	.LBE4:
 248:Core/Src/SVM.c **** }
 128              		.loc 1 248 1 is_stmt 0 view .LVU23
 129 0078 10BD     		pop	{r4, pc}
 130              	.L4:
 131 007a 00BF     		.align	2
 132              	.L3:
 133 007c 00000000 		.word	htim1
 134 0080 002C0140 		.word	1073818624
 135              		.cfi_endproc
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 10


 136              	.LFE126:
 138              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 139              		.align	1
 140              		.global	HAL_TIM_PeriodElapsedCallback
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 145              	HAL_TIM_PeriodElapsedCallback:
 146              	.LVL12:
 147              	.LFB127:
 249:Core/Src/SVM.c **** 
 250:Core/Src/SVM.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim){
 148              		.loc 1 250 60 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 250 60 is_stmt 0 view .LVU25
 153 0000 38B5     		push	{r3, r4, r5, lr}
 154              	.LCFI1:
 155              		.cfi_def_cfa_offset 16
 156              		.cfi_offset 3, -16
 157              		.cfi_offset 4, -12
 158              		.cfi_offset 5, -8
 159              		.cfi_offset 14, -4
 251:Core/Src/SVM.c **** 	PWM_U=CCR_U;
 160              		.loc 1 251 2 is_stmt 1 view .LVU26
 161              		.loc 1 251 7 is_stmt 0 view .LVU27
 162 0002 154B     		ldr	r3, .L7
 163 0004 1A88     		ldrh	r2, [r3]
 164 0006 154B     		ldr	r3, .L7+4
 165 0008 DA63     		str	r2, [r3, #60]
 252:Core/Src/SVM.c **** 	PWM_V=CCR_V;
 166              		.loc 1 252 2 is_stmt 1 view .LVU28
 167              		.loc 1 252 7 is_stmt 0 view .LVU29
 168 000a 154A     		ldr	r2, .L7+8
 169 000c 1288     		ldrh	r2, [r2]
 170 000e 9A63     		str	r2, [r3, #56]
 253:Core/Src/SVM.c **** 	PWM_W=CCR_W;
 171              		.loc 1 253 2 is_stmt 1 view .LVU30
 172              		.loc 1 253 7 is_stmt 0 view .LVU31
 173 0010 144A     		ldr	r2, .L7+12
 174 0012 1288     		ldrh	r2, [r2]
 175 0014 5A63     		str	r2, [r3, #52]
 254:Core/Src/SVM.c **** 	
 255:Core/Src/SVM.c **** 	Motor.MotorCurrents.PhaseCurrents[0] = (((Motor.MotorCurrents.ADC_VAL_PhaseCurrents[0]-1970)*11000
 176              		.loc 1 255 2 is_stmt 1 view .LVU32
 177              		.loc 1 255 85 is_stmt 0 view .LVU33
 178 0016 144C     		ldr	r4, .L7+16
 179 0018 226A     		ldr	r2, [r4, #32]
 180              		.loc 1 255 94 view .LVU34
 181 001a 1449     		ldr	r1, .L7+20
 182 001c 144B     		ldr	r3, .L7+24
 183 001e 01FB0232 		mla	r2, r1, r2, r3
 184              		.loc 1 255 102 view .LVU35
 185 0022 120B     		lsrs	r2, r2, #12
 186              		.loc 1 255 39 view .LVU36
 187 0024 6261     		str	r2, [r4, #20]
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 11


 256:Core/Src/SVM.c **** 	Motor.MotorCurrents.PhaseCurrents[1] = (((Motor.MotorCurrents.ADC_VAL_PhaseCurrents[1]-1970)*11000
 188              		.loc 1 256 2 is_stmt 1 view .LVU37
 189              		.loc 1 256 85 is_stmt 0 view .LVU38
 190 0026 626A     		ldr	r2, [r4, #36]
 191              		.loc 1 256 94 view .LVU39
 192 0028 01FB0232 		mla	r2, r1, r2, r3
 193              		.loc 1 256 102 view .LVU40
 194 002c 120B     		lsrs	r2, r2, #12
 195              		.loc 1 256 39 view .LVU41
 196 002e A261     		str	r2, [r4, #24]
 257:Core/Src/SVM.c **** 	Motor.MotorCurrents.PhaseCurrents[2] = (((Motor.MotorCurrents.ADC_VAL_PhaseCurrents[2]-1970)*11000
 197              		.loc 1 257 2 is_stmt 1 view .LVU42
 198              		.loc 1 257 85 is_stmt 0 view .LVU43
 199 0030 A26A     		ldr	r2, [r4, #40]
 200              		.loc 1 257 94 view .LVU44
 201 0032 01FB0233 		mla	r3, r1, r2, r3
 202              		.loc 1 257 102 view .LVU45
 203 0036 1B0B     		lsrs	r3, r3, #12
 204              		.loc 1 257 39 view .LVU46
 205 0038 E361     		str	r3, [r4, #28]
 258:Core/Src/SVM.c **** 
 259:Core/Src/SVM.c **** 	transform_to_Clark_domain(Motor.MotorCurrents.PhaseCurrents, Motor.MotorCurrents.AlphaBetaCurrents
 206              		.loc 1 259 2 is_stmt 1 view .LVU47
 207 003a 04F10C05 		add	r5, r4, #12
 208 003e 2946     		mov	r1, r5
 209 0040 04F11400 		add	r0, r4, #20
 210              	.LVL13:
 211              		.loc 1 259 2 is_stmt 0 view .LVU48
 212 0044 FFF7FEFF 		bl	transform_to_Clark_domain
 213              	.LVL14:
 260:Core/Src/SVM.c **** 	transform_to_Park_domain(Motor.MotorCurrents.AlphaBetaCurrents, Motor.MotorCurrents.DQCurrenst, Mo
 214              		.loc 1 260 2 is_stmt 1 view .LVU49
 215              		.loc 1 260 103 is_stmt 0 view .LVU50
 216 0048 2146     		mov	r1, r4
 217              		.loc 1 260 2 view .LVU51
 218 004a 31F8042B 		ldrh	r2, [r1], #4
 219 004e 2846     		mov	r0, r5
 220 0050 FFF7FEFF 		bl	transform_to_Park_domain
 221              	.LVL15:
 261:Core/Src/SVM.c **** }
 222              		.loc 1 261 1 view .LVU52
 223 0054 38BD     		pop	{r3, r4, r5, pc}
 224              	.L8:
 225 0056 00BF     		.align	2
 226              	.L7:
 227 0058 00000000 		.word	.LANCHOR0
 228 005c 002C0140 		.word	1073818624
 229 0060 00000000 		.word	.LANCHOR1
 230 0064 00000000 		.word	.LANCHOR2
 231 0068 00000000 		.word	Motor
 232 006c B0AD0100 		.word	110000
 233 0070 A06B15F3 		.word	-216700000
 234              		.cfi_endproc
 235              	.LFE127:
 237              		.section	.text.setVoltageVector,"ax",%progbits
 238              		.align	1
 239              		.global	setVoltageVector
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 12


 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 244              	setVoltageVector:
 245              	.LVL16:
 246              	.LFB128:
 262:Core/Src/SVM.c **** 
 263:Core/Src/SVM.c **** 
 264:Core/Src/SVM.c **** // setpoint 0..100% => 0..256
 265:Core/Src/SVM.c **** 
 266:Core/Src/SVM.c **** void setVoltageVector(int phase,int phaseshift, uint16_t setpoint){
 247              		.loc 1 266 67 is_stmt 1 view -0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 267:Core/Src/SVM.c **** 	phase=phase+phaseshift;
 252              		.loc 1 267 2 view .LVU54
 253              		.loc 1 267 7 is_stmt 0 view .LVU55
 254 0000 0144     		add	r1, r1, r0
 255              	.LVL17:
 268:Core/Src/SVM.c **** 	
 269:Core/Src/SVM.c **** 	uint16_t active_vectors_time= PWM_TIM_ARR*setpoint>>8;
 256              		.loc 1 269 2 is_stmt 1 view .LVU56
 270:Core/Src/SVM.c **** 	uint16_t inactive_vector_time= PWM_TIM_ARR-active_vectors_time;
 257              		.loc 1 270 2 view .LVU57
 271:Core/Src/SVM.c **** 	
 272:Core/Src/SVM.c **** 	uint16_t active_vector1_time=0;
 258              		.loc 1 272 2 view .LVU58
 273:Core/Src/SVM.c **** 	uint16_t active_vector2_time=0;
 259              		.loc 1 273 2 view .LVU59
 274:Core/Src/SVM.c **** 	
 275:Core/Src/SVM.c **** 	uint16_t CCR_AV1=0;
 260              		.loc 1 275 2 view .LVU60
 276:Core/Src/SVM.c **** 	uint16_t CCR_AV2=0;
 261              		.loc 1 276 2 view .LVU61
 277:Core/Src/SVM.c **** 	uint16_t CCR_IAV=0;
 262              		.loc 1 277 2 view .LVU62
 278:Core/Src/SVM.c **** 	
 279:Core/Src/SVM.c **** 	if(phase>=360) phase=phase-360;
 263              		.loc 1 279 2 view .LVU63
 264              		.loc 1 279 4 is_stmt 0 view .LVU64
 265 0002 B1F5B47F 		cmp	r1, #360
 266 0006 01DB     		blt	.L10
 267              		.loc 1 279 17 is_stmt 1 discriminator 1 view .LVU65
 268              		.loc 1 279 22 is_stmt 0 discriminator 1 view .LVU66
 269 0008 A1F5B471 		sub	r1, r1, #360
 270              	.LVL18:
 271              	.L10:
 280:Core/Src/SVM.c **** 	if(phase<0) 	phase=phase+360;
 272              		.loc 1 280 2 is_stmt 1 view .LVU67
 273              		.loc 1 280 4 is_stmt 0 view .LVU68
 274 000c 0029     		cmp	r1, #0
 275 000e 37DB     		blt	.L20
 276              	.L11:
 281:Core/Src/SVM.c **** 	
 282:Core/Src/SVM.c **** 	current_sector=(uint16_t)phase/60;
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 13


 277              		.loc 1 282 2 is_stmt 1 view .LVU69
 278              		.loc 1 282 17 is_stmt 0 view .LVU70
 279 0010 8BB2     		uxth	r3, r1
 280              		.loc 1 282 16 view .LVU71
 281 0012 4648     		ldr	r0, .L21
 282 0014 A0FB0303 		umull	r0, r3, r0, r3
 283 0018 5B09     		lsrs	r3, r3, #5
 284 001a 4548     		ldr	r0, .L21+4
 285 001c 0380     		strh	r3, [r0]	@ movhi
 283:Core/Src/SVM.c **** 	
 284:Core/Src/SVM.c **** //	switch(current_sector){
 285:Core/Src/SVM.c **** //		case(0):										// phase 0-59�
 286:Core/Src/SVM.c **** //			CCR_AV1= inactive_vector_time>>1;									// start of active vector 1
 287:Core/Src/SVM.c **** //			active_vector2_time= ((active_vectors_time * phase)/60);
 288:Core/Src/SVM.c **** //			active_vector1_time= active_vectors_time-active_vector2_time;
 289:Core/Src/SVM.c **** //			CCR_CURR_AV1=	CCR_AV1+(active_vector1_time>>1);		// middle of active vector 1 to sample curren
 290:Core/Src/SVM.c **** //			CCR_AV2= active_vector1_time + CCR_AV1;							// start of active vector 2
 291:Core/Src/SVM.c **** //			CCR_CURR_AV2 =CCR_AV2 + (active_vector2_time>>1);	// middle of active vector 2 to sample curre
 292:Core/Src/SVM.c **** //			CCR_IAV = active_vector2_time+ CCR_AV2;
 293:Core/Src/SVM.c **** //			
 294:Core/Src/SVM.c **** //			CCR_U = CCR_AV1;
 295:Core/Src/SVM.c **** //			CCR_V = CCR_AV2;
 296:Core/Src/SVM.c **** //			CCR_W = CCR_IAV;
 297:Core/Src/SVM.c **** //			break;
 298:Core/Src/SVM.c **** //		case(1):										// phase 60-119�
 299:Core/Src/SVM.c **** //			CCR_AV1= inactive_vector_time>>1;									// start of active vector 1
 300:Core/Src/SVM.c **** //			active_vector2_time= ((active_vectors_time * (phase-60))/60);
 301:Core/Src/SVM.c **** //			active_vector1_time= active_vectors_time-active_vector2_time;
 302:Core/Src/SVM.c **** //			CCR_CURR_AV1=	CCR_AV1+(active_vector2_time>>1);		// middle of active vector 1 to sample curren
 303:Core/Src/SVM.c **** //			CCR_AV2= active_vector2_time + CCR_AV1;							// start of active vector 2
 304:Core/Src/SVM.c **** //			CCR_CURR_AV2 =CCR_AV2 + (active_vector1_time>>1);	// middle of active vector 2 to sample curre
 305:Core/Src/SVM.c **** //			CCR_IAV = active_vector1_time+ CCR_AV2;
 306:Core/Src/SVM.c **** //			
 307:Core/Src/SVM.c **** //			CCR_U = CCR_AV2;
 308:Core/Src/SVM.c **** //			CCR_V = CCR_AV1;
 309:Core/Src/SVM.c **** //			CCR_W = CCR_IAV;
 310:Core/Src/SVM.c **** //			break;		
 311:Core/Src/SVM.c **** //		case(2):										// phase 120-179�
 312:Core/Src/SVM.c **** //			CCR_AV1= inactive_vector_time>>1;									// start of active vector 1
 313:Core/Src/SVM.c **** //			active_vector2_time= ((active_vectors_time * (phase-120))/60);
 314:Core/Src/SVM.c **** //			active_vector1_time= active_vectors_time-active_vector2_time;
 315:Core/Src/SVM.c **** //			CCR_CURR_AV1=	CCR_AV1+(active_vector1_time>>1);		// middle of active vector 1 to sample curren
 316:Core/Src/SVM.c **** //			CCR_AV2= active_vector1_time + CCR_AV1;							// start of active vector 2
 317:Core/Src/SVM.c **** //			CCR_CURR_AV2 =CCR_AV2 + (active_vector2_time>>1);	// middle of active vector 2 to sample curre
 318:Core/Src/SVM.c **** //			CCR_IAV = active_vector2_time+ CCR_AV2;
 319:Core/Src/SVM.c **** //			
 320:Core/Src/SVM.c **** //			CCR_U = CCR_IAV;
 321:Core/Src/SVM.c **** //			CCR_V = CCR_AV1;
 322:Core/Src/SVM.c **** //			CCR_W = CCR_AV2;
 323:Core/Src/SVM.c **** //			break;
 324:Core/Src/SVM.c **** //		case(3):										// phase 180-239�
 325:Core/Src/SVM.c **** //			CCR_AV1= inactive_vector_time>>1;									// start of active vector 1
 326:Core/Src/SVM.c **** //			active_vector2_time= ((active_vectors_time * (phase-180))/60);
 327:Core/Src/SVM.c **** //			active_vector1_time= active_vectors_time-active_vector2_time;
 328:Core/Src/SVM.c **** //			CCR_CURR_AV1=	CCR_AV1+(active_vector2_time>>1);		// middle of active vector 1 to sample curren
 329:Core/Src/SVM.c **** //			CCR_AV2= active_vector2_time + CCR_AV1;							// start of active vector 2
 330:Core/Src/SVM.c **** //			CCR_CURR_AV2 =CCR_AV2 + (active_vector1_time>>1);	// middle of active vector 2 to sample curre
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 14


 331:Core/Src/SVM.c **** //			CCR_IAV = active_vector1_time+ CCR_AV2;
 332:Core/Src/SVM.c **** //			
 333:Core/Src/SVM.c **** //			CCR_U = CCR_IAV;
 334:Core/Src/SVM.c **** //			CCR_V = CCR_AV2;
 335:Core/Src/SVM.c **** //			CCR_W = CCR_AV1;
 336:Core/Src/SVM.c **** //			break;
 337:Core/Src/SVM.c **** //		case(4):										// phase 240-299�
 338:Core/Src/SVM.c **** //			CCR_AV1= inactive_vector_time>>1;									// start of active vector 1
 339:Core/Src/SVM.c **** //			active_vector2_time= ((active_vectors_time * (phase-240))/60);
 340:Core/Src/SVM.c **** //			active_vector1_time= active_vectors_time-active_vector2_time;
 341:Core/Src/SVM.c **** //			CCR_CURR_AV1=	CCR_AV1+(active_vector1_time>>1);		// middle of active vector 1 to sample curren
 342:Core/Src/SVM.c **** //			CCR_AV2= active_vector1_time + CCR_AV1;							// start of active vector 2
 343:Core/Src/SVM.c **** //			CCR_CURR_AV2 =CCR_AV2 + (active_vector2_time>>1);	// middle of active vector 2 to sample curre
 344:Core/Src/SVM.c **** //			CCR_IAV = active_vector2_time+ CCR_AV2;
 345:Core/Src/SVM.c **** //			
 346:Core/Src/SVM.c **** //			CCR_U = CCR_AV2;
 347:Core/Src/SVM.c **** //			CCR_V = CCR_IAV;
 348:Core/Src/SVM.c **** //			CCR_W = CCR_AV1;
 349:Core/Src/SVM.c **** //			break;
 350:Core/Src/SVM.c **** //		case(5):										// phase 300-359�
 351:Core/Src/SVM.c **** //			CCR_AV1= inactive_vector_time>>1;									// start of active vector 1
 352:Core/Src/SVM.c **** //			active_vector2_time= ((active_vectors_time * (phase-300))/60);
 353:Core/Src/SVM.c **** //			active_vector1_time= active_vectors_time-active_vector2_time;
 354:Core/Src/SVM.c **** //			CCR_CURR_AV1=	CCR_AV1+(active_vector2_time>>1);		// middle of active vector 1 to sample curren
 355:Core/Src/SVM.c **** //			CCR_AV2= active_vector2_time + CCR_AV1;							// start of active vector 2
 356:Core/Src/SVM.c **** //			CCR_CURR_AV2 =CCR_AV2 + (active_vector1_time>>1);	// middle of active vector 2 to sample curre
 357:Core/Src/SVM.c **** //			CCR_IAV = active_vector1_time+ CCR_AV2;
 358:Core/Src/SVM.c **** //			
 359:Core/Src/SVM.c **** //			CCR_U = CCR_AV1;
 360:Core/Src/SVM.c **** //			CCR_V = CCR_IAV;
 361:Core/Src/SVM.c **** //			CCR_W = CCR_AV2;
 362:Core/Src/SVM.c **** //			break;
 363:Core/Src/SVM.c **** //	}
 364:Core/Src/SVM.c **** 	
 365:Core/Src/SVM.c **** 	if(phase<180)									CCR_U=PWM_TIM_ARR_half+((uint32_t)(SPWM[phase]*setpoint*PWM_TIM_ARR_half)>>1
 286              		.loc 1 365 2 is_stmt 1 view .LVU72
 287              		.loc 1 365 4 is_stmt 0 view .LVU73
 288 001e B329     		cmp	r1, #179
 289 0020 31DC     		bgt	.L12
 290              		.loc 1 365 24 is_stmt 1 discriminator 1 view .LVU74
 291              		.loc 1 365 63 is_stmt 0 discriminator 1 view .LVU75
 292 0022 444B     		ldr	r3, .L21+8
 293 0024 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 294              		.loc 1 365 70 discriminator 1 view .LVU76
 295 0028 02FB03F3 		mul	r3, r2, r3
 296              		.loc 1 365 79 discriminator 1 view .LVU77
 297 002c 4FF41670 		mov	r0, #600
 298 0030 00FB03F3 		mul	r3, r0, r3
 299              		.loc 1 365 97 discriminator 1 view .LVU78
 300 0034 9B0C     		lsrs	r3, r3, #18
 301              		.loc 1 365 46 discriminator 1 view .LVU79
 302 0036 0344     		add	r3, r3, r0
 303              		.loc 1 365 29 discriminator 1 view .LVU80
 304 0038 3F48     		ldr	r0, .L21+12
 305 003a 0380     		strh	r3, [r0]	@ movhi
 306              	.L13:
 366:Core/Src/SVM.c **** 	else 											CCR_U=PWM_TIM_ARR_half-((uint32_t)(SPWM[phase-180]*setpoint*PWM_TIM_ARR_half)>>18)
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 15


 367:Core/Src/SVM.c **** 	
 368:Core/Src/SVM.c **** 	if(phase<120)									CCR_V=PWM_TIM_ARR_half-((uint32_t)(SPWM[phase+60]*setpoint*PWM_TIM_ARR_half)
 307              		.loc 1 368 2 is_stmt 1 view .LVU81
 308              		.loc 1 368 4 is_stmt 0 view .LVU82
 309 003c 7729     		cmp	r1, #119
 310 003e 32DC     		bgt	.L14
 311              		.loc 1 368 24 is_stmt 1 discriminator 1 view .LVU83
 312              		.loc 1 368 69 is_stmt 0 discriminator 1 view .LVU84
 313 0040 01F13C03 		add	r3, r1, #60
 314              		.loc 1 368 63 discriminator 1 view .LVU85
 315 0044 3B48     		ldr	r0, .L21+8
 316 0046 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 317              		.loc 1 368 73 discriminator 1 view .LVU86
 318 004a 02FB03F3 		mul	r3, r2, r3
 319              		.loc 1 368 82 discriminator 1 view .LVU87
 320 004e 4FF41670 		mov	r0, #600
 321 0052 00FB03F3 		mul	r3, r0, r3
 322              		.loc 1 368 100 discriminator 1 view .LVU88
 323 0056 9B0C     		lsrs	r3, r3, #18
 324              		.loc 1 368 46 discriminator 1 view .LVU89
 325 0058 C31A     		subs	r3, r0, r3
 326              		.loc 1 368 29 discriminator 1 view .LVU90
 327 005a 3848     		ldr	r0, .L21+16
 328 005c 0380     		strh	r3, [r0]	@ movhi
 329              	.L15:
 369:Core/Src/SVM.c **** 	else if((phase<300)) 							CCR_V=PWM_TIM_ARR_half+((uint32_t)(SPWM[phase-120]*setpoint*PWM_TIM_AR
 370:Core/Src/SVM.c **** 	else											CCR_V=PWM_TIM_ARR_half-((uint32_t)(SPWM[phase-300]*setpoint*PWM_TIM_ARR_half)>>18);
 371:Core/Src/SVM.c **** 																												 
 372:Core/Src/SVM.c **** 	if(phase<60)									CCR_W=PWM_TIM_ARR_half+((uint32_t)(SPWM[phase+120]*setpoint*PWM_TIM_ARR_half)
 330              		.loc 1 372 2 is_stmt 1 view .LVU91
 331              		.loc 1 372 4 is_stmt 0 view .LVU92
 332 005e 3B29     		cmp	r1, #59
 333 0060 44DC     		bgt	.L17
 334              		.loc 1 372 23 is_stmt 1 discriminator 1 view .LVU93
 335              		.loc 1 372 68 is_stmt 0 discriminator 1 view .LVU94
 336 0062 7831     		adds	r1, r1, #120
 337              	.LVL19:
 338              		.loc 1 372 62 discriminator 1 view .LVU95
 339 0064 334B     		ldr	r3, .L21+8
 340 0066 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 341              		.loc 1 372 73 discriminator 1 view .LVU96
 342 006a 03FB02F2 		mul	r2, r3, r2
 343              	.LVL20:
 344              		.loc 1 372 82 discriminator 1 view .LVU97
 345 006e 4FF41673 		mov	r3, #600
 346 0072 03FB02F2 		mul	r2, r3, r2
 347              		.loc 1 372 100 discriminator 1 view .LVU98
 348 0076 920C     		lsrs	r2, r2, #18
 349              		.loc 1 372 45 discriminator 1 view .LVU99
 350 0078 1A44     		add	r2, r2, r3
 351              		.loc 1 372 28 discriminator 1 view .LVU100
 352 007a 314B     		ldr	r3, .L21+20
 353 007c 1A80     		strh	r2, [r3]	@ movhi
 354 007e 7047     		bx	lr
 355              	.LVL21:
 356              	.L20:
 280:Core/Src/SVM.c **** 	
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 16


 357              		.loc 1 280 15 is_stmt 1 discriminator 1 view .LVU101
 280:Core/Src/SVM.c **** 	
 358              		.loc 1 280 20 is_stmt 0 discriminator 1 view .LVU102
 359 0080 01F5B471 		add	r1, r1, #360
 360              	.LVL22:
 280:Core/Src/SVM.c **** 	
 361              		.loc 1 280 20 discriminator 1 view .LVU103
 362 0084 C4E7     		b	.L11
 363              	.L12:
 366:Core/Src/SVM.c **** 	else 											CCR_U=PWM_TIM_ARR_half-((uint32_t)(SPWM[phase-180]*setpoint*PWM_TIM_ARR_half)>>18)
 364              		.loc 1 366 18 is_stmt 1 view .LVU104
 366:Core/Src/SVM.c **** 	else 											CCR_U=PWM_TIM_ARR_half-((uint32_t)(SPWM[phase-180]*setpoint*PWM_TIM_ARR_half)>>18)
 365              		.loc 1 366 63 is_stmt 0 view .LVU105
 366 0086 A1F1B403 		sub	r3, r1, #180
 366:Core/Src/SVM.c **** 	else 											CCR_U=PWM_TIM_ARR_half-((uint32_t)(SPWM[phase-180]*setpoint*PWM_TIM_ARR_half)>>18)
 367              		.loc 1 366 57 view .LVU106
 368 008a 2A48     		ldr	r0, .L21+8
 369 008c 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 366:Core/Src/SVM.c **** 	else 											CCR_U=PWM_TIM_ARR_half-((uint32_t)(SPWM[phase-180]*setpoint*PWM_TIM_ARR_half)>>18)
 370              		.loc 1 366 68 view .LVU107
 371 0090 02FB03F3 		mul	r3, r2, r3
 366:Core/Src/SVM.c **** 	else 											CCR_U=PWM_TIM_ARR_half-((uint32_t)(SPWM[phase-180]*setpoint*PWM_TIM_ARR_half)>>18)
 372              		.loc 1 366 77 view .LVU108
 373 0094 4FF41670 		mov	r0, #600
 374 0098 00FB03F3 		mul	r3, r0, r3
 366:Core/Src/SVM.c **** 	else 											CCR_U=PWM_TIM_ARR_half-((uint32_t)(SPWM[phase-180]*setpoint*PWM_TIM_ARR_half)>>18)
 375              		.loc 1 366 95 view .LVU109
 376 009c 9B0C     		lsrs	r3, r3, #18
 366:Core/Src/SVM.c **** 	else 											CCR_U=PWM_TIM_ARR_half-((uint32_t)(SPWM[phase-180]*setpoint*PWM_TIM_ARR_half)>>18)
 377              		.loc 1 366 40 view .LVU110
 378 009e C31A     		subs	r3, r0, r3
 366:Core/Src/SVM.c **** 	else 											CCR_U=PWM_TIM_ARR_half-((uint32_t)(SPWM[phase-180]*setpoint*PWM_TIM_ARR_half)>>18)
 379              		.loc 1 366 23 view .LVU111
 380 00a0 2548     		ldr	r0, .L21+12
 381 00a2 0380     		strh	r3, [r0]	@ movhi
 382 00a4 CAE7     		b	.L13
 383              	.L14:
 369:Core/Src/SVM.c **** 	else if((phase<300)) 							CCR_V=PWM_TIM_ARR_half+((uint32_t)(SPWM[phase-120]*setpoint*PWM_TIM_AR
 384              		.loc 1 369 7 is_stmt 1 view .LVU112
 369:Core/Src/SVM.c **** 	else if((phase<300)) 							CCR_V=PWM_TIM_ARR_half+((uint32_t)(SPWM[phase-120]*setpoint*PWM_TIM_AR
 385              		.loc 1 369 9 is_stmt 0 view .LVU113
 386 00a6 B1F5967F 		cmp	r1, #300
 387 00aa 0FDA     		bge	.L16
 369:Core/Src/SVM.c **** 	else if((phase<300)) 							CCR_V=PWM_TIM_ARR_half+((uint32_t)(SPWM[phase-120]*setpoint*PWM_TIM_AR
 388              		.loc 1 369 30 is_stmt 1 discriminator 1 view .LVU114
 369:Core/Src/SVM.c **** 	else if((phase<300)) 							CCR_V=PWM_TIM_ARR_half+((uint32_t)(SPWM[phase-120]*setpoint*PWM_TIM_AR
 389              		.loc 1 369 75 is_stmt 0 discriminator 1 view .LVU115
 390 00ac A1F17803 		sub	r3, r1, #120
 369:Core/Src/SVM.c **** 	else if((phase<300)) 							CCR_V=PWM_TIM_ARR_half+((uint32_t)(SPWM[phase-120]*setpoint*PWM_TIM_AR
 391              		.loc 1 369 69 discriminator 1 view .LVU116
 392 00b0 2048     		ldr	r0, .L21+8
 393 00b2 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 369:Core/Src/SVM.c **** 	else if((phase<300)) 							CCR_V=PWM_TIM_ARR_half+((uint32_t)(SPWM[phase-120]*setpoint*PWM_TIM_AR
 394              		.loc 1 369 80 discriminator 1 view .LVU117
 395 00b6 02FB03F3 		mul	r3, r2, r3
 369:Core/Src/SVM.c **** 	else if((phase<300)) 							CCR_V=PWM_TIM_ARR_half+((uint32_t)(SPWM[phase-120]*setpoint*PWM_TIM_AR
 396              		.loc 1 369 89 discriminator 1 view .LVU118
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 17


 397 00ba 4FF41670 		mov	r0, #600
 398 00be 00FB03F3 		mul	r3, r0, r3
 369:Core/Src/SVM.c **** 	else if((phase<300)) 							CCR_V=PWM_TIM_ARR_half+((uint32_t)(SPWM[phase-120]*setpoint*PWM_TIM_AR
 399              		.loc 1 369 107 discriminator 1 view .LVU119
 400 00c2 9B0C     		lsrs	r3, r3, #18
 369:Core/Src/SVM.c **** 	else if((phase<300)) 							CCR_V=PWM_TIM_ARR_half+((uint32_t)(SPWM[phase-120]*setpoint*PWM_TIM_AR
 401              		.loc 1 369 52 discriminator 1 view .LVU120
 402 00c4 0344     		add	r3, r3, r0
 369:Core/Src/SVM.c **** 	else if((phase<300)) 							CCR_V=PWM_TIM_ARR_half+((uint32_t)(SPWM[phase-120]*setpoint*PWM_TIM_AR
 403              		.loc 1 369 35 discriminator 1 view .LVU121
 404 00c6 1D48     		ldr	r0, .L21+16
 405 00c8 0380     		strh	r3, [r0]	@ movhi
 406 00ca C8E7     		b	.L15
 407              	.L16:
 370:Core/Src/SVM.c **** 																												 
 408              		.loc 1 370 17 is_stmt 1 view .LVU122
 370:Core/Src/SVM.c **** 																												 
 409              		.loc 1 370 62 is_stmt 0 view .LVU123
 410 00cc A1F59673 		sub	r3, r1, #300
 370:Core/Src/SVM.c **** 																												 
 411              		.loc 1 370 56 view .LVU124
 412 00d0 1848     		ldr	r0, .L21+8
 413 00d2 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 370:Core/Src/SVM.c **** 																												 
 414              		.loc 1 370 67 view .LVU125
 415 00d6 02FB03F3 		mul	r3, r2, r3
 370:Core/Src/SVM.c **** 																												 
 416              		.loc 1 370 76 view .LVU126
 417 00da 4FF41670 		mov	r0, #600
 418 00de 00FB03F3 		mul	r3, r0, r3
 370:Core/Src/SVM.c **** 																												 
 419              		.loc 1 370 94 view .LVU127
 420 00e2 9B0C     		lsrs	r3, r3, #18
 370:Core/Src/SVM.c **** 																												 
 421              		.loc 1 370 39 view .LVU128
 422 00e4 C31A     		subs	r3, r0, r3
 370:Core/Src/SVM.c **** 																												 
 423              		.loc 1 370 22 view .LVU129
 424 00e6 1548     		ldr	r0, .L21+16
 425 00e8 0380     		strh	r3, [r0]	@ movhi
 426 00ea B8E7     		b	.L15
 427              	.L17:
 373:Core/Src/SVM.c **** 	else if((phase<240)) 							CCR_W=PWM_TIM_ARR_half-((uint32_t)(SPWM[phase-60]*setpoint*PWM_TIM_ARR
 428              		.loc 1 373 7 is_stmt 1 view .LVU130
 429              		.loc 1 373 9 is_stmt 0 view .LVU131
 430 00ec EF29     		cmp	r1, #239
 431 00ee 0EDC     		bgt	.L19
 432              		.loc 1 373 30 is_stmt 1 discriminator 1 view .LVU132
 433              		.loc 1 373 75 is_stmt 0 discriminator 1 view .LVU133
 434 00f0 3C39     		subs	r1, r1, #60
 435              	.LVL23:
 436              		.loc 1 373 69 discriminator 1 view .LVU134
 437 00f2 104B     		ldr	r3, .L21+8
 438 00f4 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 439              		.loc 1 373 79 discriminator 1 view .LVU135
 440 00f8 02FB03F3 		mul	r3, r2, r3
 441              		.loc 1 373 88 discriminator 1 view .LVU136
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 18


 442 00fc 4FF41672 		mov	r2, #600
 443              	.LVL24:
 444              		.loc 1 373 88 discriminator 1 view .LVU137
 445 0100 02FB03F3 		mul	r3, r2, r3
 446              		.loc 1 373 106 discriminator 1 view .LVU138
 447 0104 9B0C     		lsrs	r3, r3, #18
 448              		.loc 1 373 52 discriminator 1 view .LVU139
 449 0106 D31A     		subs	r3, r2, r3
 450              		.loc 1 373 35 discriminator 1 view .LVU140
 451 0108 0D4A     		ldr	r2, .L21+20
 452 010a 1380     		strh	r3, [r2]	@ movhi
 453 010c 7047     		bx	lr
 454              	.LVL25:
 455              	.L19:
 374:Core/Src/SVM.c **** 	else											CCR_W=PWM_TIM_ARR_half+((uint32_t)(SPWM[phase-240]*setpoint*PWM_TIM_ARR_half)>>18);
 456              		.loc 1 374 17 is_stmt 1 view .LVU141
 457              		.loc 1 374 62 is_stmt 0 view .LVU142
 458 010e F039     		subs	r1, r1, #240
 459              	.LVL26:
 460              		.loc 1 374 56 view .LVU143
 461 0110 084B     		ldr	r3, .L21+8
 462 0112 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 463              		.loc 1 374 67 view .LVU144
 464 0116 02FB03F3 		mul	r3, r2, r3
 465              		.loc 1 374 76 view .LVU145
 466 011a 4FF41672 		mov	r2, #600
 467              	.LVL27:
 468              		.loc 1 374 76 view .LVU146
 469 011e 02FB03F3 		mul	r3, r2, r3
 470              		.loc 1 374 94 view .LVU147
 471 0122 9B0C     		lsrs	r3, r3, #18
 472              		.loc 1 374 39 view .LVU148
 473 0124 1344     		add	r3, r3, r2
 474              		.loc 1 374 22 view .LVU149
 475 0126 064A     		ldr	r2, .L21+20
 476 0128 1380     		strh	r3, [r2]	@ movhi
 375:Core/Src/SVM.c **** 	
 376:Core/Src/SVM.c **** 	
 377:Core/Src/SVM.c **** 	
 378:Core/Src/SVM.c **** 	
 379:Core/Src/SVM.c **** 	// calculte the CCR5 und CCR6 register to determine when the current is sampled
 380:Core/Src/SVM.c **** 	// these CCR registers must be set in die middel of the active vectors
 381:Core/Src/SVM.c **** 	
 382:Core/Src/SVM.c **** //	if(phase<)
 383:Core/Src/SVM.c **** 	
 384:Core/Src/SVM.c **** 	
 385:Core/Src/SVM.c **** 								
 386:Core/Src/SVM.c **** }
 477              		.loc 1 386 1 view .LVU150
 478 012a 7047     		bx	lr
 479              	.L22:
 480              		.align	2
 481              	.L21:
 482 012c 89888888 		.word	-2004318071
 483 0130 00000000 		.word	.LANCHOR3
 484 0134 00000000 		.word	.LANCHOR4
 485 0138 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 19


 486 013c 00000000 		.word	.LANCHOR1
 487 0140 00000000 		.word	.LANCHOR2
 488              		.cfi_endproc
 489              	.LFE128:
 491              		.global	SPWM
 492              		.section	.bss.CCR_U,"aw",%nobits
 493              		.align	1
 494              		.set	.LANCHOR0,. + 0
 497              	CCR_U:
 498 0000 0000     		.space	2
 499              		.section	.bss.CCR_V,"aw",%nobits
 500              		.align	1
 501              		.set	.LANCHOR1,. + 0
 504              	CCR_V:
 505 0000 0000     		.space	2
 506              		.section	.bss.CCR_W,"aw",%nobits
 507              		.align	1
 508              		.set	.LANCHOR2,. + 0
 511              	CCR_W:
 512 0000 0000     		.space	2
 513              		.section	.bss.current_sector,"aw",%nobits
 514              		.align	1
 515              		.set	.LANCHOR3,. + 0
 518              	current_sector:
 519 0000 0000     		.space	2
 520              		.section	.rodata.SPWM,"a"
 521              		.align	2
 522              		.set	.LANCHOR4,. + 0
 525              	SPWM:
 526 0000 0000     		.short	0
 527 0002 1E00     		.short	30
 528 0004 3D00     		.short	61
 529 0006 5B00     		.short	91
 530 0008 7A00     		.short	122
 531 000a 9800     		.short	152
 532 000c B700     		.short	183
 533 000e D500     		.short	213
 534 0010 F300     		.short	243
 535 0012 1101     		.short	273
 536 0014 3001     		.short	304
 537 0016 4E01     		.short	334
 538 0018 6C01     		.short	364
 539 001a 8A01     		.short	394
 540 001c A801     		.short	424
 541 001e C601     		.short	454
 542 0020 E301     		.short	483
 543 0022 0102     		.short	513
 544 0024 1E02     		.short	542
 545 0026 3C02     		.short	572
 546 0028 5902     		.short	601
 547 002a 7602     		.short	630
 548 002c 9302     		.short	659
 549 002e B002     		.short	688
 550 0030 CD02     		.short	717
 551 0032 E902     		.short	745
 552 0034 0603     		.short	774
 553 0036 2203     		.short	802
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 20


 554 0038 3E03     		.short	830
 555 003a 5A03     		.short	858
 556 003c 7603     		.short	886
 557 003e 7E03     		.short	894
 558 0040 8603     		.short	902
 559 0042 8D03     		.short	909
 560 0044 9503     		.short	917
 561 0046 9C03     		.short	924
 562 0048 A303     		.short	931
 563 004a AA03     		.short	938
 564 004c B003     		.short	944
 565 004e B703     		.short	951
 566 0050 BD03     		.short	957
 567 0052 C303     		.short	963
 568 0054 C803     		.short	968
 569 0056 CE03     		.short	974
 570 0058 D303     		.short	979
 571 005a D703     		.short	983
 572 005c DC03     		.short	988
 573 005e E003     		.short	992
 574 0060 E503     		.short	997
 575 0062 E903     		.short	1001
 576 0064 EC03     		.short	1004
 577 0066 EF03     		.short	1007
 578 0068 F203     		.short	1010
 579 006a F503     		.short	1013
 580 006c F703     		.short	1015
 581 006e FA03     		.short	1018
 582 0070 FC03     		.short	1020
 583 0072 FD03     		.short	1021
 584 0074 FE03     		.short	1022
 585 0076 FF03     		.short	1023
 586 0078 0004     		.short	1024
 587 007a 0004     		.short	1024
 588 007c 0004     		.short	1024
 589 007e 0004     		.short	1024
 590 0080 0004     		.short	1024
 591 0082 FE03     		.short	1022
 592 0084 FD03     		.short	1021
 593 0086 FC03     		.short	1020
 594 0088 FA03     		.short	1018
 595 008a F703     		.short	1015
 596 008c F503     		.short	1013
 597 008e F203     		.short	1010
 598 0090 EF03     		.short	1007
 599 0092 EB03     		.short	1003
 600 0094 E703     		.short	999
 601 0096 E303     		.short	995
 602 0098 DE03     		.short	990
 603 009a D903     		.short	985
 604 009c D403     		.short	980
 605 009e CE03     		.short	974
 606 00a0 C803     		.short	968
 607 00a2 C103     		.short	961
 608 00a4 BA03     		.short	954
 609 00a6 B403     		.short	948
 610 00a8 AC03     		.short	940
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 21


 611 00aa A403     		.short	932
 612 00ac 9C03     		.short	924
 613 00ae 9303     		.short	915
 614 00b0 8A03     		.short	906
 615 00b2 8103     		.short	897
 616 00b4 7703     		.short	887
 617 00b6 8103     		.short	897
 618 00b8 8A03     		.short	906
 619 00ba 9303     		.short	915
 620 00bc 9C03     		.short	924
 621 00be A403     		.short	932
 622 00c0 AC03     		.short	940
 623 00c2 B403     		.short	948
 624 00c4 BA03     		.short	954
 625 00c6 C103     		.short	961
 626 00c8 C803     		.short	968
 627 00ca CE03     		.short	974
 628 00cc D403     		.short	980
 629 00ce D903     		.short	985
 630 00d0 DE03     		.short	990
 631 00d2 E303     		.short	995
 632 00d4 E703     		.short	999
 633 00d6 EB03     		.short	1003
 634 00d8 EF03     		.short	1007
 635 00da F203     		.short	1010
 636 00dc F503     		.short	1013
 637 00de F703     		.short	1015
 638 00e0 FA03     		.short	1018
 639 00e2 FC03     		.short	1020
 640 00e4 FD03     		.short	1021
 641 00e6 FE03     		.short	1022
 642 00e8 0004     		.short	1024
 643 00ea 0004     		.short	1024
 644 00ec 0004     		.short	1024
 645 00ee 0004     		.short	1024
 646 00f0 0004     		.short	1024
 647 00f2 FF03     		.short	1023
 648 00f4 FE03     		.short	1022
 649 00f6 FD03     		.short	1021
 650 00f8 FC03     		.short	1020
 651 00fa FA03     		.short	1018
 652 00fc F703     		.short	1015
 653 00fe F503     		.short	1013
 654 0100 F203     		.short	1010
 655 0102 EF03     		.short	1007
 656 0104 EC03     		.short	1004
 657 0106 E903     		.short	1001
 658 0108 E503     		.short	997
 659 010a E003     		.short	992
 660 010c DC03     		.short	988
 661 010e D703     		.short	983
 662 0110 D303     		.short	979
 663 0112 CE03     		.short	974
 664 0114 C803     		.short	968
 665 0116 C303     		.short	963
 666 0118 BD03     		.short	957
 667 011a B703     		.short	951
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 22


 668 011c B003     		.short	944
 669 011e AA03     		.short	938
 670 0120 A303     		.short	931
 671 0122 9C03     		.short	924
 672 0124 9503     		.short	917
 673 0126 8D03     		.short	909
 674 0128 8603     		.short	902
 675 012a 7E03     		.short	894
 676 012c 7603     		.short	886
 677 012e 5A03     		.short	858
 678 0130 3E03     		.short	830
 679 0132 2203     		.short	802
 680 0134 0603     		.short	774
 681 0136 E902     		.short	745
 682 0138 CD02     		.short	717
 683 013a B002     		.short	688
 684 013c 9302     		.short	659
 685 013e 7602     		.short	630
 686 0140 5902     		.short	601
 687 0142 3C02     		.short	572
 688 0144 1E02     		.short	542
 689 0146 0102     		.short	513
 690 0148 E301     		.short	483
 691 014a C601     		.short	454
 692 014c A801     		.short	424
 693 014e 8A01     		.short	394
 694 0150 6C01     		.short	364
 695 0152 4E01     		.short	334
 696 0154 3001     		.short	304
 697 0156 1101     		.short	273
 698 0158 F300     		.short	243
 699 015a D500     		.short	213
 700 015c B700     		.short	183
 701 015e 9800     		.short	152
 702 0160 7A00     		.short	122
 703 0162 5B00     		.short	91
 704 0164 3D00     		.short	61
 705 0166 1E00     		.short	30
 706              		.text
 707              	.Letext0:
 708              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 709              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 710              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f302x8.h"
 711              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 712              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 713              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 714              		.file 9 "Core/Inc/global_var.h"
 715              		.file 10 "Core/Inc/tim.h"
 716              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 717              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim_ex.h"
ARM GAS  C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 SVM.c
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:20     .text.initSVM:00000000 $t
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:26     .text.initSVM:00000000 initSVM
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:133    .text.initSVM:0000007c $d
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:139    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:145    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:227    .text.HAL_TIM_PeriodElapsedCallback:00000058 $d
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:238    .text.setVoltageVector:00000000 $t
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:244    .text.setVoltageVector:00000000 setVoltageVector
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:482    .text.setVoltageVector:0000012c $d
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:525    .rodata.SPWM:00000000 SPWM
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:493    .bss.CCR_U:00000000 $d
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:497    .bss.CCR_U:00000000 CCR_U
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:500    .bss.CCR_V:00000000 $d
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:504    .bss.CCR_V:00000000 CCR_V
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:507    .bss.CCR_W:00000000 $d
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:511    .bss.CCR_W:00000000 CCR_W
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:514    .bss.current_sector:00000000 $d
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:518    .bss.current_sector:00000000 current_sector
C:\Users\Simio\AppData\Local\Temp\ccDMMBZ2.s:521    .rodata.SPWM:00000000 $d

UNDEFINED SYMBOLS
HAL_NVIC_EnableIRQ
HAL_NVIC_SetPriority
HAL_TIM_PWM_Start
HAL_TIM_PWM_Start_IT
HAL_TIMEx_PWMN_Start
htim1
transform_to_Clark_domain
transform_to_Park_domain
Motor
